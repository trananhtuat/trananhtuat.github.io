let field=document.getElementsByClassName("block");newGrid=((e,r)=>{let t=new Array(r);for(let a=0;a<r;a++)t[a]=new Array(e);let a=0;for(let o=0;o<r;o++)for(let r=0;r<e;r++)t[o][r]={index:a++,value:0};return{board:t,width:e,height:r}}),resetGrid=(e=>{for(let r=0;r<e.height;r++)for(let t=0;t<e.width;t++)e.board[r][t].value=0;Array.from(field).forEach(e=>{e.style.background=TRANSPARENT})}),newTetromino=((e,r,t,a)=>{let o=Math.floor(Math.random()*e.length);return{block:JSON.parse(JSON.stringify(e[o])),color:r[o],x:t,y:a}}),drawTetromino=((e,r)=>{e.block.forEach((t,a)=>{t.forEach((t,o)=>{let l=e.x+a,i=e.y+o;t>0&&(field[r.board[l][i].index].style.background=e.color)})})}),clearTetromino=((e,r)=>{e.block.forEach((t,a)=>{t.forEach((t,o)=>{let l=e.x+a,i=e.y+o;t>0&&(field[r.board[l][i].index].style.background=TRANSPARENT)})})}),isInGrid=((e,r,t)=>e<t.height&&e>=0&&r>=0&&r<t.width),isFilled=((e,r,t)=>!!isInGrid(e,r,t)&&0!==t.board[e][r].value),movable=((e,r,t)=>{let a=e.x,o=e.y;switch(t){case DIRECTION.DOWN:a=e.x+1;break;case DIRECTION.LEFT:o=e.y-1;break;case DIRECTION.RIGHT:o=e.y+1}return e.block.every((e,t)=>e.every((e,l)=>{let i=a+t,s=o+l;return 0===e||isInGrid(i,s,r)&&!isFilled(i,s,r)}))}),moveDown=((e,r)=>{movable(e,r,DIRECTION.DOWN)&&(clearTetromino(e,r),e.x++,drawTetromino(e,r))}),moveLeft=((e,r)=>{movable(e,r,DIRECTION.LEFT)&&(clearTetromino(e,r),e.y--,drawTetromino(e,r))}),moveRight=((e,r)=>{movable(e,r,DIRECTION.RIGHT)&&(clearTetromino(e,r),e.y++,drawTetromino(e,r))}),rotatable=((e,r)=>{let t=JSON.parse(JSON.stringify(e.block));for(let e=0;e<t.length;e++)for(let r=0;r<e;++r)[t[r][e],t[e][r]]=[t[e][r],t[r][e]];return t.forEach(e=>e.reverse()),t.every((t,a)=>t.every((t,o)=>{let l=e.x+a,i=e.y+o;return 0===t||isInGrid(l,i,r)&&!isFilled(l,i,r)}))}),rotate=((e,r)=>{if(rotatable(e,r)){clearTetromino(e,r);for(let r=0;r<e.block.length;r++)for(let t=0;t<r;++t)[e.block[t][r],e.block[r][t]]=[e.block[r][t],e.block[t][r]];e.block.forEach(e=>e.reverse()),drawTetromino(e,r)}}),hardDrop=((e,r)=>{for(clearTetromino(e,r);movable(e,r,DIRECTION.DOWN);)e.x++;drawTetromino(e,r)}),updateGrid=((e,r)=>{e.block.forEach((t,a)=>{t.forEach((t,o)=>{let l=e.x+a,i=e.y+o;t>0&&isInGrid(l,i,r)&&(r.board[l][i].value=t)})})}),checkFilledRow=(e=>e.every(e=>0!==e.value)),deleteRow=((e,r)=>{for(let t=e;t>0;t--)for(let e=0;e<10;e++){r.board[t][e].value=r.board[t-1][e].value;let a=r.board[t][e].value;field[r.board[t][e].index].style.background=0===a?TRANSPARENT:COLORS[a-1]}}),checkGrid=(e=>{let r=0;e.board.forEach((t,a)=>{checkFilledRow(t)&&(deleteRow(a,e),r++)}),r>0&&updateGame(r)});let game={score:START_SCORE,speed:START_SPEED,level:1,state:GAME_STATE.END,interval:null},grid=newGrid(GRID_WIDTH,GRID_HEIGHT),tetromino=null,score_span=document.querySelector("#score"),level_span=document.querySelector("#level");score_span.innerHTML=game.score,gameLoop=(()=>{if(game.state===GAME_STATE.PLAY)if(movable(tetromino,grid,DIRECTION.DOWN))moveDown(tetromino,grid);else if(updateGrid(tetromino,grid),checkGrid(grid),tetromino=newTetromino(BLOCKS,COLORS,START_X,START_Y),movable(tetromino,grid,DIRECTION.DOWN))drawTetromino(tetromino,grid);else{game.state=GAME_STATE.END;let e=document.querySelector("body");e.classList.add("end"),e.classList.remove("play");let r=document.querySelector("#result-level"),t=document.querySelector("#result-score");r.innerHTML=game.level,t.innerHTML=game.score}}),gameStart=(()=>{game.state=GAME_STATE.PLAY,tetromino=newTetromino(BLOCKS,COLORS,START_X,START_Y),drawTetromino(tetromino,grid),game.interval=setInterval(gameLoop,game.speed)}),updateGame=(e=>{game.score+=e*MAIN_SCORE+(e-1)*BONUS_SCORE,game.level=Math.floor(game.score/800)+1;let r=game.speed<200?50:START_SPEED-50*game.level;r!==game.speed&&(game.speed=r,clearInterval(game.interval),game.interval=setInterval(gameLoop,game.speed)),level_span.innerHTML="lv. "+game.level,score_span.innerHTML=game.score}),gamePause=(()=>{game.state=GAME_STATE.PAUSE}),gameResume=(()=>{game.state=GAME_STATE.PLAY}),gameReset=(()=>{clearInterval(game.interval),resetGrid(grid),game.score=START_SCORE,game.speed=START_SPEED,game.state=GAME_STATE.END,game.level=1,game.interval=null,tetromino=null}),document.addEventListener("keydown",e=>{let r=document.querySelector("body");switch(e.preventDefault(),e.which){case KEY.DOWN:moveDown(tetromino,grid);break;case KEY.LEFT:moveLeft(tetromino,grid);break;case KEY.RIGHT:moveRight(tetromino,grid);break;case KEY.UP:rotate(tetromino,grid);break;case KEY.SPACE:hardDrop(tetromino,grid);break;case KEY.P:let t=document.querySelector("#btn-play");game.state!==GAME_STATE.PAUSE?(gamePause(),r.classList.add("pause"),r.classList.remove("play"),t.innerHTML="resume"):(r.classList.remove("pause"),r.classList.add("play"),gameResume())}});let btns=document.querySelectorAll('[id*="btn-"]');btns.forEach(e=>{let r=e.getAttribute("id"),t=document.querySelector("body");e.addEventListener("click",()=>{switch(r){case"btn-drop":hardDrop(tetromino,grid);break;case"btn-up":rotate(tetromino,grid);break;case"btn-down":moveDown(tetromino,grid);break;case"btn-left":moveLeft(tetromino,grid);break;case"btn-right":moveRight(tetromino,grid);break;case"btn-play":if(t.classList.add("play"),game.state===GAME_STATE.PAUSE)return t.classList.remove("pause"),void gameResume();gameStart();break;case"btn-theme":t.classList.toggle("dark");break;case"btn-pause":gamePause(),document.querySelector("#btn-play").innerHTML="resume",t.classList.remove("play"),t.classList.add("pause");break;case"btn-new-game":gameReset(),t.classList.add("play"),t.classList.remove("pause"),t.classList.remove("end"),gameStart();break;case"btn-help":document.querySelector(".how-to").classList.toggle("active")}})});